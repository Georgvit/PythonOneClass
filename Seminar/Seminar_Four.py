# # –ë–æ–ª—å—à–µ –ø—Ä–µ–¥—ã–¥—É—â–µ–≥–æ
# # –ù–∞ –≤—Ö–æ–¥ –ø—Ä–æ–≥—Ä–∞–º–º–µ –ø–æ–¥–∞–µ—Ç—Å—è —Å—Ç—Ä–æ–∫–∞ —Ç–µ–∫—Å—Ç–∞ –∏–∑ –Ω–∞—Ç—É—Ä–∞–ª—å–Ω—ã—Ö —á–∏—Å–µ–ª.
# # –ò–∑ –Ω–µ—ë —Ñ–æ—Ä–º–∏—Ä—É–µ—Ç—Å—è —Å–ø–∏—Å–æ–∫ —á–∏—Å–µ–ª. –ù–∞–ø–∏—à–∏—Ç–µ –ø—Ä–æ–≥—Ä–∞–º–º—É –ø–æ–¥—Å—á–µ—Ç–∞ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ —á–∏—Å–µ–ª,
# # –∫–æ—Ç–æ—Ä—ã–µ –±–æ–ª—å—à–µ –ø—Ä–µ–¥—à–µ—Å—Ç–≤—É—é—â–µ–≥–æ –∏–º –≤ —ç—Ç–æ–º —Å–ø–∏—Å–∫–µ —á–∏—Å–ª–∞, —Ç–æ –µ—Å—Ç—å, —Å—Ç–æ—è—Ç –≤—Å–ª–µ–¥ –∑–∞ –º–µ–Ω—å—à–∏–º —á–∏—Å–ª–æ–º.
# # –§–æ—Ä–º–∞—Ç –≤—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
# # –ù–∞ –≤—Ö–æ–¥ –ø—Ä–æ–≥—Ä–∞–º–º–µ –ø–æ–¥–∞–µ—Ç—Å—è —Å—Ç—Ä–æ–∫–∞ —Ç–µ–∫—Å—Ç–∞ –∏–∑ —Ä–∞–∑–¥–µ–ª–µ–Ω–Ω—ã—Ö –ø—Ä–æ–±–µ–ª–∞–º–∏ –Ω–∞—Ç—É—Ä–∞–ª—å–Ω—ã—Ö —á–∏—Å–µ–ª.
# # –§–æ—Ä–º–∞—Ç –≤—ã—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
# # –ü—Ä–æ–≥—Ä–∞–º–º–∞ –¥–æ–ª–∂–Ω–∞ –≤—ã–≤–µ—Å—Ç–∏ –æ–¥–Ω–æ —á–∏—Å–ª–æ ‚Äì –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ —Å–ø–∏—Å–∫–∞, –±–æ–ª—å—à–∏—Ö –ø—Ä–µ–¥—ã–¥—É—â–µ–≥–æ.
#
# # –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ üü¢
# # Sample Input 1:
# # 1 2 3 4 5
# # Sample Output 1:
# # 4
# # Sample Input 2:
# # 1 1 3 2 2 1 1 1 1
# # Sample Output 2:
# # 1
# # Sample Input 3:
# # 5 4 3 2 1
# # Sample Output 3:
# # 0
#
# # –í–≤–æ–¥ —Å—Ç—Ä–æ–∫–∏ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
# string = input('–í–≤–µ–¥–∏—Ç–µ —Å—Ç—Ä–æ–∫—É –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞: ')
# string = string.replace(' ', '')
# count = 0
# number_of_numbers = 0
#
# # –¶–∏–∫–ª –∞–Ω–∞–ª–∏–∑–∞
# for count in range(len(string) - 1):
#     if int(string[count]) < int(string[count + 1]):
#         number_of_numbers += 1
#
#     count += 1
#
# # –í—ã–≤–æ–¥ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞
# print(f'–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —á–∏—Å–µ–ª,–∫–æ—Ç–æ—Ä—ã–µ –±–æ–ª—å—à–µ –ø—Ä–µ–¥—à–µ—Å—Ç–≤—É—é—â–µ–≥–æ: {number_of_numbers}')


# # –ù–∞–ø–∏—Å–∞—Ç—å –ø—Ä–æ–≥—Ä–∞–º–º—É –¥–ª—è —Ç—Ä–∞–Ω—Å–ª–∏—Ç–µ—Ä–∞—Ü–∏–∏
# # 'a', 'b', 'v', 'g', 'd', 'e', 'zh', 'z',
# # 'i', 'y', 'k', 'l', 'm', 'n', 'o', 'p', 'r',
# # 's', 't', 'u', 'f', 'kh', 'ts', 'ch',
# # 'sh', 'shch', '', 'y', '', 'e', 'yu', 'ya'
#
# string_text = input('–í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å –¥–ª—è —Ç—Ä–∞–Ω—Å–ª–∏—Ç–µ—Ä–∞—Ü–∏–∏: ')
#
#
# en = ['a', 'b', 'v', 'g', 'd', 'e', 'zh', 'z',
# 'i', 'y', 'k', 'l', 'm', 'n', 'o', 'p', 'r',
# 's', 't', 'u', 'f', 'kh', 'ts', 'ch',
# 'sh', 'shch', '', 'y', '', 'e', 'yu', 'ya', ' ', ',', '.', '!', '?']
#
# ru = ['–∞', '–±', '–≤', '–≥', '–¥', '–µ', '–∂', '–∑',
# '–∏', '–π', '–∫', '–ª', '–º', '–Ω', '–æ', '–ø', '—Ä',
# '—Å', '—Ç', '—É', '—Ñ', '—Ö', '—Ü', '—á',
# '—à', '—â', '—ä', '—ã', '—å', '—ç', '—é', '—è', ' ', ',', '.', '!', '?']
#
#
#
# new_string_text = ''
# for count in range(len(string_text)):
#         index = ru.index(string_text[count].lower())
#         if string_text[count].isupper():
#             char = string_text[count].replace(string_text[count], en[index].upper())
#             new_string_text = new_string_text + char
#         else:
#             char = string_text[count].replace(string_text[count], en[index])
#             new_string_text = new_string_text + char
#
# print(new_string_text)

# –ì–ï–ù–ò–ê–õ–¨–ù–û–ï –†–ï–®–ï–ù–ò–ï –í –ì–†–£–ü–ü–ï
# transleterate = \
# {'–∞': 'a','–±': 'b','–≤': 'v','–≥' : 'g','–¥' : 'd','–µ' : 'e','–∂' : 'zh','–∑' : 'z','–∏' : 'i',
# '–π' : 'y','–∫' : 'k','–ª' : 'l','–º' : 'm','–Ω' : 'n','–æ' :'o','–ø' : 'p','—Ä' : 'r','—Å' : 's',
# '—Ç' : 't','—É' : 'u','—Ñ' : 'f','—Ö' : 'kh','—Ü' : 'ts','—á' : 'ch','—à' : 'sh','—â' : 'shch',
# '—å' : '\'','—ã' :'y','—ä' : '','—ç' : 'e','—é' : 'yu','—è' : 'ya'}
# text = input('input: ')
#
# for i in text:
# print(transleterate[i], end = "")

# –†–µ—à–µ–Ω–∏–µ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è
t = \
    ['a', 'b', 'v', 'g', 'd', 'e', 'zh', 'z', 'i', 'y', 'k', 'l', 'm', 'n', 'o',
     'p', 'r', 's', 't', 'u', 'f', 'kh', 'ts', 'ch', 'sh', 'shch', '', 'y', '', 'e', 'yu', 'ya']

start_index = ord('–∞')
title = '–ü–µ—Ä–µ–≤–æ–¥–∏–º —ç—Ç–æ—Ç —Ç–µ–∫—Å—Ç, —Å–µ–π—á–∞—Å!'
print(title.lower())

slug = ""
for s in title.lower():
    if "–∞" <= s <= "—è":
        slug += t[ord(s) - ord('–∞')]
        print(ord(s), ord('–∞'))
    else:
        slug += s

print(slug)
